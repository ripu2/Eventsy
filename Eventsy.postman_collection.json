{
	"info": {
		"_postman_id": "a230b74d-6a89-40d8-8994-c8ed984e573d",
		"name": "Eventsy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13844657"
	},
	"item": [
		{
			"name": "GetEvent",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOST}}/events",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AUTH_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mass User Conversion\",\n    \"description\": \"Hindu <-> Jeesu\",\n    \"location\": \"Teresa ka jhopdi\",\n    \"dateTime\": \"2025-01-01T15:30:00.000Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/createEvent",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"createEvent"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetEventById",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOST}}//events/1",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"",
						"events",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateEvent",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AUTH_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Updated\",\n    \"description\": \"Test Updated\",\n    \"location\": \"Ghar Updates\",\n    \"dateTime\": \"2025-01-01T15:30:00.000Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/updateEvent/10",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"updateEvent",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Event",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AUTH_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{HOST}}/deleteEvent/1",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"deleteEvent",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mia Khalifa Modi\",\n    \"userName\": \"Modi ki Mia\",\n    \"email\": \"modikimia@example.com\",\n    \"passwordHash\": \"hashed_password_123\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/createUser",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"createUser"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/users",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store token in eventsy environment\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    console.log(\"üîç Full Login Response:\", jsonData); // Debugging",
							"    ",
							"    if (jsonData.token) {",
							"        pm.environment.set(\"AUTH_TOKEN\", jsonData.token); // Store token in eventsy",
							"        console.log(\"‚úÖ Token saved in eventsy:\", jsonData.token);",
							"    } else {",
							"        console.log(\"‚ùå Token not found in response!\");",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n            \"UserName\": \"ShahKiSunny\",\n    \"passwordHash\": \"hashed_password_123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/login",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetRegistrations",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "RegisterEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AUTH_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{HOST}}/registration/3",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"registration",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if (pm.environment.get(\"AUTH_TOKEN\")) {",
					"    pm.request.headers.add({",
					"        key: \"Authorization\",",
					"        value: \"Bearer \" + pm.environment.get(\"AUTH_TOKEN\")",
					"    });",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST",
			"value": "localhost:8080"
		}
	]
}